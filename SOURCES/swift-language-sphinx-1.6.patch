diff -ur a/docs/CMakeLists.txt b/docs/CMakeLists.txt
--- a/docs/CMakeLists.txt	2017-04-21 22:18:29.000000000 +0100
+++ b/docs/CMakeLists.txt	2017-07-30 12:47:54.050084538 +0100
@@ -11,7 +11,7 @@
 
 SET(SPHINX_ARGS
   -W
-  -D latex_paper_size=${SWIFT_SPHINX_PAPER_SIZE}
+  -D latex_elements.papersize=${SWIFT_SPHINX_PAPER_SIZE}
   -d ${CMAKE_BINARY_DIR}/doctrees)
 
 if(SPHINX_EXECUTABLE)
diff -ur a/docs/conf.py b/docs/conf.py
--- a/docs/conf.py	2017-04-21 22:18:29.000000000 +0100
+++ b/docs/conf.py	2017-07-30 12:48:57.778696619 +0100
@@ -29,7 +29,7 @@
 extensions = ['sphinx.ext.intersphinx', 'sphinx.ext.todo']
 
 # Add any paths that contain templates here, relative to this directory.
-templates_path = ['_templates']
+templates_path = ['_templates', 'archive']
 
 # The suffix of source filenames.
 source_suffix = '.rst'
@@ -146,7 +146,7 @@
 
 # Additional templates that should be rendered to pages, maps page names to
 # template names.
-html_additional_pages = {'LangRef': 'archive/LangRef.html'}
+html_additional_pages = {'archive/LangRef': 'LangRef.html'}
 
 # If false, no module index is generated.
 # html_domain_indices = True
diff -ur a/docs/Makefile b/docs/Makefile
--- a/docs/Makefile	2017-04-21 22:18:29.000000000 +0100
+++ b/docs/Makefile	2017-07-30 12:49:24.098710404 +0100
@@ -8,8 +8,8 @@
 BUILDDIR      = _build
 
 # Internal variables.
-PAPEROPT_a4     = -D latex_paper_size=a4
-PAPEROPT_letter = -D latex_paper_size=letter
+PAPEROPT_a4     = -D latex_elements.papersize=a4
+PAPEROPT_letter = -D latex_elements.papersize=letter
 ALLSPHINXOPTS   = -W -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
 # the i18n builder cannot share the environment and doctrees with the others
 I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
diff -ur a/docs/proposals/InitializerInheritance.rst b/docs/proposals/InitializerInheritance.rst
--- a/docs/proposals/InitializerInheritance.rst	2017-04-21 22:18:29.000000000 +0100
+++ b/docs/proposals/InitializerInheritance.rst	2017-07-30 12:50:06.428124316 +0100
@@ -135,7 +135,7 @@
 Complete object initializers
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Introduce the notion of a complete object initializer, which is
-written as an initializer with ``Self`` as its return type [#], e.g.::
+written as an initializer with ``Self`` as its return type [#]_, e.g.::
 
   init() -> Self {
     // ...
